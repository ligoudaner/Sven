<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ourslook.production.dao.MomentsDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.ourslook.production.entity.MomentsEntity" id="momentsMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_Id"/>
        <result property="content" column="content"/>
        <result property="photos" column="photos"/>
        <result property="userName" column="user_name"/>
        <result property="type" column="type"/>
        <result property="mUserName" column="m_user_name"/>
        <result property="replyToUserName" column="reply_to_user_name"/>
        <result property="replyContent" column="reply_content"/>
        <result property="status" column="status"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.ourslook.production.entity.MomentsEntity">
		select * from tb_moments where id = #{value}
	</select>

	<select id="queryList" resultType="com.ourslook.production.entity.MomentsEntity">
		select * from tb_moments
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_moments 
	</select>
	 
	<insert id="save" parameterType="com.ourslook.production.entity.MomentsEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tb_moments
		(
			`user_Id`, 
			`content`, 
			`photos`, 
			`user_name`, 
			`type`, 
			`m_user_name`, 
			`reply_to_user_name`, 
			`reply_content`, 
			`status`, 
			`create_user`, 
			`create_time`
		)
		values
		(
			#{userId}, 
			#{content}, 
			#{photos}, 
			#{userName}, 
			#{type}, 
			#{mUserName}, 
			#{replyToUserName}, 
			#{replyContent}, 
			#{status}, 
			#{createUser}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.ourslook.production.entity.MomentsEntity">
		update tb_moments 
		<set>
			<if test="userId != null">`user_Id` = #{userId}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="photos != null">`photos` = #{photos}, </if>
			<if test="userName != null">`user_name` = #{userName}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="mUserName != null">`m_user_name` = #{mUserName}, </if>
			<if test="replyToUserName != null">`reply_to_user_name` = #{replyToUserName}, </if>
			<if test="replyContent != null">`reply_content` = #{replyContent}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tb_moments where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_moments where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>